# ============================================================================
# Multi Ninja Espacial - Conanfile (Gestión de Dependencias)
# ============================================================================
# Este archivo define todas las bibliotecas externas que usa el proyecto
# Conan las descargará y compilará automáticamente
# ============================================================================

[requires]
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# ECS (Entity-Component-System)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# EnTT: Biblioteca header-only ultra-rápida para ECS
# - Usado en: Core (domain layer)
# - Por qué: Mejor rendimiento del mercado, header-only, C++20
entt/3.12.2

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Windowing y Contexto OpenGL
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# SDL2: Biblioteca multiplataforma para ventanas, input, audio
# - Usado en: Infrastructure (input, window creation)
# - Por qué: Multiplataforma (Windows, macOS, Linux), battle-tested
sdl/2.28.5

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Rendering (OpenGL)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# GLEW: OpenGL Extension Wrangler - carga extensiones OpenGL
# - Usado en: Infrastructure/rendering/opengl
# - Por qué: Necesario para OpenGL moderno (3.3+)
glew/2.2.0

# GLM: OpenGL Mathematics - vectores, matrices, transformaciones
# - Usado en: Shared/math, Core/components
# - Por qué: Header-only, sintaxis GLSL-compatible
glm/0.9.9.8

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Networking (Multijugador)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# ENet: Biblioteca UDP confiable para juegos
# - Usado en: Infrastructure/networking
# - Por qué: UDP con confiabilidad selectiva, ideal para juegos
enet/1.3.17

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Logging y Debugging
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# spdlog: Logger rápido y asíncrono
# - Usado en: Toda la aplicación
# - Por qué: Header-only, extremadamente rápido, formato personalizable
spdlog/1.12.0

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Testing
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Catch2: Framework de testing moderno para C++
# - Usado en: tests/unit, tests/integration
# - Por qué: Header-only, sintaxis BDD clara, excelente con C++20
catch2/3.4.0

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# OPCIONAL (Fase 4): Vulkan
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# vulkan-headers/1.3.239  # Descomenta para Fase 4
# vulkan-loader/1.3.239   # Descomenta para Fase 4

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# OPCIONAL (Fase 3): Compresión para streaming
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# zlib/1.2.13            # Para comprimir datos de red
# lz4/1.9.4              # Compresión ultra-rápida

[generators]
# Genera archivos CMakeFindPackage para usar find_package() en CMake
cmake_find_package

[options]
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Opciones de compilación de las dependencias
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# SDL2: Compilar como biblioteca compartida (mejor para desarrollo)
sdl:shared=True

# GLEW: Biblioteca compartida
glew:shared=True

# spdlog: Header-only mode (más rápido de compilar)
spdlog:header_only=True

[imports]
# Copiar DLLs/dylibs al directorio de build (solo para shared libraries)
bin, *.dll -> ./bin
lib, *.dylib* -> ./bin
lib, *.so* -> ./bin
